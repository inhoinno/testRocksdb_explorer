========== fillrandom 32MB] Test5 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626634389738109
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
Date:	Mon Jul 19 03:53:09 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
DB path: [../mnt]
1626634393005071 1-Level CompactionJob::Run() [ 14 0 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634396411322 2-Level CompactionJob::Run() [ 14 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634401447219 2-Level CompactionJob::Run() [ 14 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634406154833 2-Level CompactionJob::Run() [ 14 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634409665316 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634410602100 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634411561659 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634412530352 2-Level CompactionJob::Run() [ 19 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634416511197 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634417420813 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634418330144 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634419642458 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634420901747 2-Level CompactionJob::Run() [ 20 5 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634425266765 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634426441492 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634427686702 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634428933597 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634430038242 2-Level CompactionJob::Run() [ 20 6 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634434758983 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634435190363 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634436382353 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634437578084 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634438944869 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634440191882 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634441582192 2-Level CompactionJob::Run() [ 21 5 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634446148574 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634447422767 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634448756843 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634450065393 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634451399622 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634452799436 2-Level CompactionJob::Run() [ 21 6 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634457367711 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634458720960 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634458966920 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
fillrandom   :       6.987 micros/op 143123 ops/sec;   72.1 MB/s
Latency for percentile 0 : 2.000000
Latency for percentile 1 : 2.002067
Latency for percentile 2 : 2.023697
Latency for percentile 3 : 2.045327
Latency for percentile 4 : 2.066957
Latency for percentile 5 : 2.088587
Latency for percentile 6 : 2.110218
Latency for percentile 7 : 2.131848
Latency for percentile 8 : 2.153478
Latency for percentile 9 : 2.175108
Latency for percentile 10 : 2.196738
Latency for percentile 11 : 2.218368
Latency for percentile 12 : 2.239998
Latency for percentile 13 : 2.261628
Latency for percentile 14 : 2.283258
Latency for percentile 15 : 2.304888
Latency for percentile 16 : 2.326518
Latency for percentile 17 : 2.348148
Latency for percentile 18 : 2.369778
Latency for percentile 19 : 2.391408
Latency for percentile 20 : 2.413038
Latency for percentile 21 : 2.434669
Latency for percentile 22 : 2.456299
Latency for percentile 23 : 2.477929
Latency for percentile 24 : 2.499559
Latency for percentile 25 : 2.521189
Latency for percentile 26 : 2.542819
Latency for percentile 27 : 2.564449
Latency for percentile 28 : 2.586079
Latency for percentile 29 : 2.607709
Latency for percentile 30 : 2.629339
Latency for percentile 31 : 2.650969
Latency for percentile 32 : 2.672599
Latency for percentile 33 : 2.694229
Latency for percentile 34 : 2.715859
Latency for percentile 35 : 2.737489
Latency for percentile 36 : 2.759120
Latency for percentile 37 : 2.780750
Latency for percentile 38 : 2.802380
Latency for percentile 39 : 2.824010
Latency for percentile 40 : 2.845640
Latency for percentile 41 : 2.867270
Latency for percentile 42 : 2.888900
Latency for percentile 43 : 2.910530
Latency for percentile 44 : 2.932160
Latency for percentile 45 : 2.953790
Latency for percentile 46 : 2.975420
Latency for percentile 47 : 2.997050
Latency for percentile 48 : 3.021721
Latency for percentile 49 : 3.046872
Latency for percentile 50 : 3.072023
Latency for percentile 51 : 3.097174
Latency for percentile 52 : 3.122325
Latency for percentile 53 : 3.147476
Latency for percentile 54 : 3.172627
Latency for percentile 55 : 3.197778
Latency for percentile 56 : 3.222929
Latency for percentile 57 : 3.248080
Latency for percentile 58 : 3.273231
Latency for percentile 59 : 3.298382
Latency for percentile 60 : 3.323533
Latency for percentile 61 : 3.348684
Latency for percentile 62 : 3.373835
Latency for percentile 63 : 3.398986
Latency for percentile 64 : 3.424137
Latency for percentile 65 : 3.449288
Latency for percentile 66 : 3.474439
Latency for percentile 67 : 3.499590
Latency for percentile 68 : 3.524741
Latency for percentile 69 : 3.549892
Latency for percentile 70 : 3.575043
Latency for percentile 71 : 3.600194
Latency for percentile 72 : 3.625345
Latency for percentile 73 : 3.650496
Latency for percentile 74 : 3.675647
Latency for percentile 75 : 3.700798
Latency for percentile 76 : 3.725949
Latency for percentile 77 : 3.751100
Latency for percentile 78 : 3.776251
Latency for percentile 79 : 3.801402
Latency for percentile 80 : 3.826553
Latency for percentile 81 : 3.851704
Latency for percentile 82 : 3.876855
Latency for percentile 83 : 3.902006
Latency for percentile 84 : 3.927157
Latency for percentile 85 : 3.952308
Latency for percentile 86 : 3.977459
Latency for percentile 87 : 4.017479
Latency for percentile 88 : 4.185885
Latency for percentile 89 : 4.354291
Latency for percentile 90 : 4.522696
Latency for percentile 91 : 4.691102
Latency for percentile 92 : 4.859508
Latency for percentile 93 : 5.027914
Latency for percentile 94 : 5.196320
Latency for percentile 95 : 5.364726
Latency for percentile 96 : 5.533132
Latency for percentile 97 : 5.701538
Latency for percentile 98 : 5.869944
Latency for percentile 99 : 7.479830
Latency for percentile 100 : 3198.000000
Microseconds per write:
Count: 10000000 Average: 6.9870  StdDev: 60.54
Min: 2  Median: 3.0720  Max: 3198
Percentiles: P50: 3.07 P75: 3.70 P99: 7.48 P99.1: 8.13 P99.2: 8.78 P99.3: 9.43 P99.4: 15.02 P99.5: 17.99 P99.6: 20.96 P99.7: 33.16 P99.8: 1003.24 P99.9: 1152.28 P99.91: 1167.18 P99.92: 1182.08 P99.93: 1196.99 P99.94: 1211.89 P99.95: 1226.79 P99.96: 1241.70 P99.97: 1256.60 P99.98: 1271.50 P99.99: 1286.41
------------------------------------------------------
(       1,       2 ]    90443   0.904%   0.904% 
(       2,       3 ]  4623194  46.232%  47.136% #########
(       3,       4 ]  3975984  39.760%  86.896% ########
(       4,       6 ]  1187607  11.876%  98.772% ##
(       6,      10 ]    61553   0.616%  99.388% 
(      10,      15 ]     1138   0.011%  99.399% 
(      15,      22 ]    23600   0.236%  99.635% 
(      22,      34 ]     6970   0.070%  99.705% 
(      34,      51 ]      296   0.003%  99.708% 
(      51,      76 ]      145   0.001%  99.709% 
(      76,     110 ]      113   0.001%  99.710% 
(     110,     170 ]        7   0.000%  99.711% 
(     170,     250 ]        3   0.000%  99.711% 
(     250,     380 ]        1   0.000%  99.711% 
(     380,     580 ]        1   0.000%  99.711% 
(     580,     870 ]        5   0.000%  99.711% 
(     870,    1300 ]    28852   0.289%  99.999% 
(    1300,    1900 ]        8   0.000%  99.999% 
(    1900,    2900 ]       77   0.001% 100.000% 
(    2900,    4400 ]        3   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0       11      203
  1        9      579
  2       28     1560
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626634459675912
========== readrandom 32MB] Test5 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626634459695185
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
1626634459828132 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
Date:	Mon Jul 19 03:54:19 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
DB path: [../mnt]
1626634461216184 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634462782466 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634464386322 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634466058473 2-Level CompactionJob::Run() [ 1 5 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634467880384 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
readrandom   :      44.915 micros/op 22264 ops/sec;   11.2 MB/s (10000000 of 10000000 found)
 PERF_CONTEXT:
user_key_comparison_count = 2337122508, block_cache_hit_count = 2794247, block_read_count = 125977153, block_read_byte = 286496463122, block_read_time = 140918720522, block_cache_index_hit_count = 0, index_block_read_count = 0, block_cache_filter_hit_count = 0, filter_block_read_count = 0, compression_dict_block_read_count = 0, block_checksum_time = 13084889221, block_decompress_time = 87362172318, get_read_bytes = 5120000000, multiget_read_bytes = 0, iter_read_bytes = 0, internal_key_skipped_count = 0, internal_delete_skipped_count = 0, internal_recent_skipped_count = 0, internal_merge_count = 0, write_wal_time = 0, get_snapshot_time = 2258467940, get_from_memtable_time = 0, get_from_memtable_count = 0, get_post_process_time = 592929614, get_from_output_files_time = 441934302994, seek_on_memtable_time = 0, seek_on_memtable_count = 0, next_on_memtable_count = 0, prev_on_memtable_count = 0, seek_child_seek_time = 0, seek_child_seek_count = 0, seek_min_heap_time = 0, seek_internal_seek_time = 0, find_next_user_entry_time = 0, write_pre_and_post_process_time = 0, write_memtable_time = 0, write_thread_wait_nanos = 0, write_scheduling_flushes_compactions_time = 0, db_mutex_lock_nanos = 0, db_condition_wait_nanos = 0, merge_operator_time_nanos = 0, write_delay_time = 0, read_index_block_nanos = 0, read_filter_block_nanos = 0, new_table_block_iter_nanos = 308637664567, new_table_iterator_nanos = 0, block_seek_nanos = 74478721738, find_table_nanos = 0, bloom_memtable_hit_count = 0, bloom_memtable_miss_count = 0, bloom_sst_hit_count = 0, bloom_sst_miss_count = 0, key_lock_wait_time = 0, key_lock_wait_count = 0, env_new_sequential_file_nanos = 0, env_new_random_access_file_nanos = 0, env_new_writable_file_nanos = 0, env_reuse_writable_file_nanos = 0, env_new_random_rw_file_nanos = 0, env_new_directory_nanos = 0, env_file_exists_nanos = 0, env_get_children_nanos = 0, env_get_children_file_attributes_nanos = 0, env_delete_file_nanos = 0, env_create_dir_nanos = 0, env_create_dir_if_missing_nanos = 0, env_delete_dir_nanos = 0, env_get_file_size_nanos = 0, env_get_file_modification_time_nanos = 0, env_rename_file_nanos = 0, env_link_file_nanos = 0, env_lock_file_nanos = 0, env_unlock_file_nanos = 0, env_new_logger_nanos = 0, get_cpu_nanos = 0, iter_next_cpu_nanos = 0, iter_prev_cpu_nanos = 0, iter_seek_cpu_nanos = 0, bloom_filter_useful = 0@level0, 0@level1, 0@level2, bloom_filter_full_positive = 0@level0, 0@level1, 0@level2, bloom_filter_full_true_positive = 0@level0, 0@level1, 0@level2, block_cache_hit_count = 2790107@level0, 2899@level1, 1241@level2, block_cache_miss_count = 114822672@level0, 3517521@level1, 7636960@level2
Latency for percentile 0 : 1.000000
Latency for percentile 1 : 5.054460
Latency for percentile 2 : 7.793541
Latency for percentile 3 : 10.117438
Latency for percentile 4 : 12.978979
Latency for percentile 5 : 15.688708
Latency for percentile 6 : 18.033405
Latency for percentile 7 : 20.378103
Latency for percentile 8 : 22.640805
Latency for percentile 9 : 24.719519
Latency for percentile 10 : 26.798233
Latency for percentile 11 : 28.876947
Latency for percentile 12 : 30.955661
Latency for percentile 13 : 33.034375
Latency for percentile 14 : 34.110889
Latency for percentile 15 : 34.317978
Latency for percentile 16 : 34.525066
Latency for percentile 17 : 34.732154
Latency for percentile 18 : 34.939242
Latency for percentile 19 : 35.146330
Latency for percentile 20 : 35.353418
Latency for percentile 21 : 35.560506
Latency for percentile 22 : 35.767594
Latency for percentile 23 : 35.974682
Latency for percentile 24 : 36.181770
Latency for percentile 25 : 36.388858
Latency for percentile 26 : 36.595947
Latency for percentile 27 : 36.803035
Latency for percentile 28 : 37.010123
Latency for percentile 29 : 37.217211
Latency for percentile 30 : 37.424299
Latency for percentile 31 : 37.631387
Latency for percentile 32 : 37.838475
Latency for percentile 33 : 38.045563
Latency for percentile 34 : 38.252651
Latency for percentile 35 : 38.459739
Latency for percentile 36 : 38.666827
Latency for percentile 37 : 38.873916
Latency for percentile 38 : 39.081004
Latency for percentile 39 : 39.288092
Latency for percentile 40 : 39.495180
Latency for percentile 41 : 39.702268
Latency for percentile 42 : 39.909356
Latency for percentile 43 : 40.116444
Latency for percentile 44 : 40.323532
Latency for percentile 45 : 40.530620
Latency for percentile 46 : 40.737708
Latency for percentile 47 : 40.944796
Latency for percentile 48 : 41.151884
Latency for percentile 49 : 41.358973
Latency for percentile 50 : 41.566061
Latency for percentile 51 : 41.773149
Latency for percentile 52 : 41.980237
Latency for percentile 53 : 42.187325
Latency for percentile 54 : 42.394413
Latency for percentile 55 : 42.601501
Latency for percentile 56 : 42.808589
Latency for percentile 57 : 43.015677
Latency for percentile 58 : 43.222765
Latency for percentile 59 : 43.429853
Latency for percentile 60 : 43.636942
Latency for percentile 61 : 43.844030
Latency for percentile 62 : 44.051118
Latency for percentile 63 : 44.258206
Latency for percentile 64 : 44.465294
Latency for percentile 65 : 44.672382
Latency for percentile 66 : 44.879470
Latency for percentile 67 : 45.086558
Latency for percentile 68 : 45.293646
Latency for percentile 69 : 45.500734
Latency for percentile 70 : 45.707822
Latency for percentile 71 : 45.914911
Latency for percentile 72 : 46.121999
Latency for percentile 73 : 46.329087
Latency for percentile 74 : 46.536175
Latency for percentile 75 : 46.743263
Latency for percentile 76 : 46.950351
Latency for percentile 77 : 47.157439
Latency for percentile 78 : 47.364527
Latency for percentile 79 : 47.571615
Latency for percentile 80 : 47.778703
Latency for percentile 81 : 47.985791
Latency for percentile 82 : 48.192880
Latency for percentile 83 : 48.399968
Latency for percentile 84 : 48.607056
Latency for percentile 85 : 48.814144
Latency for percentile 86 : 49.021232
Latency for percentile 87 : 49.228320
Latency for percentile 88 : 49.435408
Latency for percentile 89 : 49.642496
Latency for percentile 90 : 49.849584
Latency for percentile 91 : 50.056672
Latency for percentile 92 : 50.263760
Latency for percentile 93 : 50.470849
Latency for percentile 94 : 50.677937
Latency for percentile 95 : 50.885025
Latency for percentile 96 : 66.066117
Latency for percentile 97 : 121.425925
Latency for percentile 98 : 140.523562
Latency for percentile 99 : 159.621198
Latency for percentile 100 : 11418.000000
Microseconds per read:
Count: 10000000 Average: 44.9152  StdDev: 71.48
Min: 1  Median: 41.5661  Max: 11418
Percentiles: P50: 41.57 P75: 46.74 P99: 159.62 P99.1: 161.53 P99.2: 163.44 P99.3: 165.35 P99.4: 167.26 P99.5: 169.17 P99.6: 184.67 P99.7: 210.63 P99.8: 236.58 P99.9: 319.78 P99.91: 334.23 P99.92: 348.68 P99.93: 363.13 P99.94: 377.57 P99.95: 502.26 P99.96: 721.99 P99.97: 1119.28 P99.98: 2156.46 P99.99: 4548.71
------------------------------------------------------
[       0,       1 ]     6316   0.063%   0.063% 
(       1,       2 ]     9105   0.091%   0.154% 
(       2,       3 ]    19956   0.200%   0.354% 
(       3,       4 ]    40033   0.400%   0.754% 
(       4,       6 ]    46640   0.466%   1.221% 
(       6,      10 ]   173846   1.738%   2.959% 
(      10,      15 ]   174731   1.747%   4.706% 
(      15,      22 ]   298546   2.985%   7.692% #
(      22,      34 ]   577280   5.773%  13.465% #
(      34,      51 ]  8209067  82.091%  95.555% ################
(      51,      76 ]    73808   0.738%  96.293% 
(      76,     110 ]    10843   0.108%  96.402% 
(     110,     170 ]   314175   3.142%  99.543% #
(     170,     250 ]    30824   0.308%  99.852% 
(     250,     380 ]     8998   0.090%  99.942% 
(     380,     580 ]     1361   0.014%  99.955% 
(     580,     870 ]      962   0.010%  99.965% 
(     870,    1300 ]      878   0.009%  99.974% 
(    1300,    1900 ]      492   0.005%  99.979% 
(    1900,    2900 ]      542   0.005%  99.984% 
(    2900,    4400 ]      529   0.005%  99.989% 
(    4400,    6600 ]     1006   0.010%  99.999% 
(    6600,    9900 ]       61   0.001% 100.000% 
(    9900,   14000 ]        1   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0       12      213
  1        3      193
  2       32     1768
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626634908998743
