========== fillrandom 64MB] Test4 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626631593154269
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
Date:	Mon Jul 19 03:06:33 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
DB path: [../mnt]
1626631596607840 1-Level CompactionJob::Run() [ 7 0 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631599840358 2-Level CompactionJob::Run() [ 7 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631603408713 2-Level CompactionJob::Run() [ 7 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631606711205 2-Level CompactionJob::Run() [ 7 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631610303745 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631611201421 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631612137469 2-Level CompactionJob::Run() [ 12 5 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631617262002 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631617845380 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631618739785 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631619649553 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631620553216 2-Level CompactionJob::Run() [ 15 7 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631627127206 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631627942963 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631628828161 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631629724326 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631630627201 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631631526863 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631632746360 2-Level CompactionJob::Run() [ 17 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631640043570 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631640814910 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631641682121 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631642585773 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
fillrandom   :       5.042 micros/op 198315 ops/sec;   99.9 MB/s
Latency for percentile 0 : 2.000000
Latency for percentile 1 : 2.012010
Latency for percentile 2 : 2.040623
Latency for percentile 3 : 2.069237
Latency for percentile 4 : 2.097851
Latency for percentile 5 : 2.126465
Latency for percentile 6 : 2.155079
Latency for percentile 7 : 2.183693
Latency for percentile 8 : 2.212307
Latency for percentile 9 : 2.240921
Latency for percentile 10 : 2.269535
Latency for percentile 11 : 2.298149
Latency for percentile 12 : 2.326763
Latency for percentile 13 : 2.355377
Latency for percentile 14 : 2.383990
Latency for percentile 15 : 2.412604
Latency for percentile 16 : 2.441218
Latency for percentile 17 : 2.469832
Latency for percentile 18 : 2.498446
Latency for percentile 19 : 2.527060
Latency for percentile 20 : 2.555674
Latency for percentile 21 : 2.584288
Latency for percentile 22 : 2.612902
Latency for percentile 23 : 2.641516
Latency for percentile 24 : 2.670130
Latency for percentile 25 : 2.698744
Latency for percentile 26 : 2.727357
Latency for percentile 27 : 2.755971
Latency for percentile 28 : 2.784585
Latency for percentile 29 : 2.813199
Latency for percentile 30 : 2.841813
Latency for percentile 31 : 2.870427
Latency for percentile 32 : 2.899041
Latency for percentile 33 : 2.927655
Latency for percentile 34 : 2.956269
Latency for percentile 35 : 2.984883
Latency for percentile 36 : 3.009765
Latency for percentile 37 : 3.030466
Latency for percentile 38 : 3.051168
Latency for percentile 39 : 3.071870
Latency for percentile 40 : 3.092572
Latency for percentile 41 : 3.113273
Latency for percentile 42 : 3.133975
Latency for percentile 43 : 3.154677
Latency for percentile 44 : 3.175379
Latency for percentile 45 : 3.196080
Latency for percentile 46 : 3.216782
Latency for percentile 47 : 3.237484
Latency for percentile 48 : 3.258186
Latency for percentile 49 : 3.278887
Latency for percentile 50 : 3.299589
Latency for percentile 51 : 3.320291
Latency for percentile 52 : 3.340993
Latency for percentile 53 : 3.361694
Latency for percentile 54 : 3.382396
Latency for percentile 55 : 3.403098
Latency for percentile 56 : 3.423800
Latency for percentile 57 : 3.444501
Latency for percentile 58 : 3.465203
Latency for percentile 59 : 3.485905
Latency for percentile 60 : 3.506607
Latency for percentile 61 : 3.527309
Latency for percentile 62 : 3.548010
Latency for percentile 63 : 3.568712
Latency for percentile 64 : 3.589414
Latency for percentile 65 : 3.610116
Latency for percentile 66 : 3.630817
Latency for percentile 67 : 3.651519
Latency for percentile 68 : 3.672221
Latency for percentile 69 : 3.692923
Latency for percentile 70 : 3.713624
Latency for percentile 71 : 3.734326
Latency for percentile 72 : 3.755028
Latency for percentile 73 : 3.775730
Latency for percentile 74 : 3.796431
Latency for percentile 75 : 3.817133
Latency for percentile 76 : 3.837835
Latency for percentile 77 : 3.858537
Latency for percentile 78 : 3.879238
Latency for percentile 79 : 3.899940
Latency for percentile 80 : 3.920642
Latency for percentile 81 : 3.941344
Latency for percentile 82 : 3.962045
Latency for percentile 83 : 3.982747
Latency for percentile 84 : 4.021737
Latency for percentile 85 : 4.152212
Latency for percentile 86 : 4.282688
Latency for percentile 87 : 4.413163
Latency for percentile 88 : 4.543638
Latency for percentile 89 : 4.674113
Latency for percentile 90 : 4.804589
Latency for percentile 91 : 4.935064
Latency for percentile 92 : 5.065539
Latency for percentile 93 : 5.196014
Latency for percentile 94 : 5.326489
Latency for percentile 95 : 5.456965
Latency for percentile 96 : 5.587440
Latency for percentile 97 : 5.717915
Latency for percentile 98 : 5.848390
Latency for percentile 99 : 5.978866
Latency for percentile 100 : 16681.000000
Microseconds per write:
Count: 10000000 Average: 5.0425  StdDev: 36.82
Min: 2  Median: 3.2996  Max: 16681
Percentiles: P50: 3.30 P75: 3.82 P99: 5.98 P99.1: 5.99 P99.2: 6.30 P99.3: 7.08 P99.4: 7.87 P99.5: 8.65 P99.6: 9.44 P99.7: 15.73 P99.8: 20.14 P99.9: 885.62 P99.91: 927.29 P99.92: 968.95 P99.93: 1010.61 P99.94: 1052.27 P99.95: 1093.94 P99.96: 1135.60 P99.97: 1177.26 P99.98: 1218.92 P99.99: 1260.59
------------------------------------------------------
(       1,       2 ]    58029   0.580%   0.580% 
(       2,       3 ]  3494803  34.948%  35.528% #######
(       3,       4 ]  4830508  48.305%  83.833% ##########
(       4,       6 ]  1532858  15.329%  99.162% ###
(       6,      10 ]    50927   0.509%  99.671% 
(      10,      15 ]     1226   0.012%  99.684% 
(      15,      22 ]    15873   0.159%  99.842% 
(      22,      34 ]     5033   0.050%  99.893% 
(      34,      51 ]      207   0.002%  99.895% 
(      51,      76 ]       68   0.001%  99.895% 
(      76,     110 ]       66   0.001%  99.896% 
(     110,     170 ]        7   0.000%  99.896% 
(     170,     250 ]        3   0.000%  99.896% 
(     250,     380 ]        3   0.000%  99.896% 
(     380,     580 ]        6   0.000%  99.896% 
(     580,     870 ]        8   0.000%  99.896% 
(     870,    1300 ]    10321   0.103%  99.999% 
(    1300,    1900 ]        2   0.000%  99.999% 
(    1900,    2900 ]       49   0.000% 100.000% 
(    4400,    6600 ]        1   0.000% 100.000% 
(    9900,   14000 ]        1   0.000% 100.000% 
(   14000,   22000 ]        1   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0       11      406
  1       13      798
  2       22     1246
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626631643648653
========== readrandom 64MB] Test4 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626631643668653
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
1626631644077421 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
Date:	Mon Jul 19 03:07:24 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
DB path: [../mnt]
1626631645005728 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631646085473 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631647104945 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631648218960 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631649356693 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631650506157 2-Level CompactionJob::Run() [ 12 7 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631656022352 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631657112120 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631658287415 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631659444362 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631660754316 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631662085485 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631663491808 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631664945219 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631666490075 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
readrandom   :      10.975 micros/op 91113 ops/sec;   45.9 MB/s (10000000 of 10000000 found)
 PERF_CONTEXT:
user_key_comparison_count = 303089386, block_cache_hit_count = 48206, block_read_count = 12566245, block_read_byte = 28298389328, block_read_time = 68657839157, block_cache_index_hit_count = 0, index_block_read_count = 0, block_cache_filter_hit_count = 0, filter_block_read_count = 0, compression_dict_block_read_count = 0, block_checksum_time = 1340931744, block_decompress_time = 9177838282, get_read_bytes = 5120000000, multiget_read_bytes = 0, iter_read_bytes = 0, internal_key_skipped_count = 0, internal_delete_skipped_count = 0, internal_recent_skipped_count = 0, internal_merge_count = 0, write_wal_time = 0, get_snapshot_time = 2110278568, get_from_memtable_time = 0, get_from_memtable_count = 0, get_post_process_time = 556984442, get_from_output_files_time = 104130452961, seek_on_memtable_time = 0, seek_on_memtable_count = 0, next_on_memtable_count = 0, prev_on_memtable_count = 0, seek_child_seek_time = 0, seek_child_seek_count = 0, seek_min_heap_time = 0, seek_internal_seek_time = 0, find_next_user_entry_time = 0, write_pre_and_post_process_time = 0, write_memtable_time = 0, write_thread_wait_nanos = 0, write_scheduling_flushes_compactions_time = 0, db_mutex_lock_nanos = 0, db_condition_wait_nanos = 0, merge_operator_time_nanos = 0, write_delay_time = 0, read_index_block_nanos = 0, read_filter_block_nanos = 0, new_table_block_iter_nanos = 86881674616, new_table_iterator_nanos = 0, block_seek_nanos = 9394270679, find_table_nanos = 0, bloom_memtable_hit_count = 0, bloom_memtable_miss_count = 0, bloom_sst_hit_count = 0, bloom_sst_miss_count = 0, key_lock_wait_time = 0, key_lock_wait_count = 0, env_new_sequential_file_nanos = 0, env_new_random_access_file_nanos = 0, env_new_writable_file_nanos = 0, env_reuse_writable_file_nanos = 0, env_new_random_rw_file_nanos = 0, env_new_directory_nanos = 0, env_file_exists_nanos = 0, env_get_children_nanos = 0, env_get_children_file_attributes_nanos = 0, env_delete_file_nanos = 0, env_create_dir_nanos = 0, env_create_dir_if_missing_nanos = 0, env_delete_dir_nanos = 0, env_get_file_size_nanos = 0, env_get_file_modification_time_nanos = 0, env_rename_file_nanos = 0, env_link_file_nanos = 0, env_lock_file_nanos = 0, env_unlock_file_nanos = 0, env_new_logger_nanos = 0, get_cpu_nanos = 0, iter_next_cpu_nanos = 0, iter_prev_cpu_nanos = 0, iter_seek_cpu_nanos = 0, bloom_filter_useful = 0@level0, 0@level1, 0@level2, bloom_filter_full_positive = 0@level0, 0@level1, 0@level2, bloom_filter_full_true_positive = 0@level0, 0@level1, 0@level2, block_cache_hit_count = 1151@level0, 31559@level1, 15496@level2, block_cache_miss_count = 117418@level0, 3636384@level1, 8812443@level2
Latency for percentile 0 : 1.000000
Latency for percentile 1 : 2.605157
Latency for percentile 2 : 3.008976
Latency for percentile 3 : 3.028564
Latency for percentile 4 : 3.048151
Latency for percentile 5 : 3.067738
Latency for percentile 6 : 3.087325
Latency for percentile 7 : 3.106913
Latency for percentile 8 : 3.126500
Latency for percentile 9 : 3.146087
Latency for percentile 10 : 3.165675
Latency for percentile 11 : 3.185262
Latency for percentile 12 : 3.204849
Latency for percentile 13 : 3.224436
Latency for percentile 14 : 3.244024
Latency for percentile 15 : 3.263611
Latency for percentile 16 : 3.283198
Latency for percentile 17 : 3.302785
Latency for percentile 18 : 3.322373
Latency for percentile 19 : 3.341960
Latency for percentile 20 : 3.361547
Latency for percentile 21 : 3.381134
Latency for percentile 22 : 3.400722
Latency for percentile 23 : 3.420309
Latency for percentile 24 : 3.439896
Latency for percentile 25 : 3.459483
Latency for percentile 26 : 3.479071
Latency for percentile 27 : 3.498658
Latency for percentile 28 : 3.518245
Latency for percentile 29 : 3.537832
Latency for percentile 30 : 3.557420
Latency for percentile 31 : 3.577007
Latency for percentile 32 : 3.596594
Latency for percentile 33 : 3.616181
Latency for percentile 34 : 3.635769
Latency for percentile 35 : 3.655356
Latency for percentile 36 : 3.674943
Latency for percentile 37 : 3.694530
Latency for percentile 38 : 3.714118
Latency for percentile 39 : 3.733705
Latency for percentile 40 : 3.753292
Latency for percentile 41 : 3.772879
Latency for percentile 42 : 3.792467
Latency for percentile 43 : 3.812054
Latency for percentile 44 : 3.831641
Latency for percentile 45 : 3.851229
Latency for percentile 46 : 3.870816
Latency for percentile 47 : 3.890403
Latency for percentile 48 : 3.909990
Latency for percentile 49 : 3.929578
Latency for percentile 50 : 3.949165
Latency for percentile 51 : 3.968752
Latency for percentile 52 : 3.988339
Latency for percentile 53 : 4.040315
Latency for percentile 54 : 4.139937
Latency for percentile 55 : 4.239560
Latency for percentile 56 : 4.339182
Latency for percentile 57 : 4.438804
Latency for percentile 58 : 4.538426
Latency for percentile 59 : 4.638049
Latency for percentile 60 : 4.737671
Latency for percentile 61 : 4.837293
Latency for percentile 62 : 4.936915
Latency for percentile 63 : 5.036537
Latency for percentile 64 : 5.136160
Latency for percentile 65 : 5.235782
Latency for percentile 66 : 5.335404
Latency for percentile 67 : 5.435026
Latency for percentile 68 : 5.534649
Latency for percentile 69 : 5.634271
Latency for percentile 70 : 5.733893
Latency for percentile 71 : 5.833515
Latency for percentile 72 : 5.933138
Latency for percentile 73 : 6.056550
Latency for percentile 74 : 6.228518
Latency for percentile 75 : 6.400487
Latency for percentile 76 : 6.572455
Latency for percentile 77 : 6.744423
Latency for percentile 78 : 6.916392
Latency for percentile 79 : 7.088360
Latency for percentile 80 : 7.260328
Latency for percentile 81 : 7.432297
Latency for percentile 82 : 7.604265
Latency for percentile 83 : 7.776233
Latency for percentile 84 : 7.948201
Latency for percentile 85 : 8.120170
Latency for percentile 86 : 8.292138
Latency for percentile 87 : 8.464106
Latency for percentile 88 : 8.636075
Latency for percentile 89 : 8.808043
Latency for percentile 90 : 8.980011
Latency for percentile 91 : 9.151980
Latency for percentile 92 : 9.323948
Latency for percentile 93 : 9.495916
Latency for percentile 94 : 9.667884
Latency for percentile 95 : 9.839853
Latency for percentile 96 : 23.704051
Latency for percentile 97 : 87.209280
Latency for percentile 98 : 98.842956
Latency for percentile 99 : 114.127475
Latency for percentile 100 : 12332.000000
Microseconds per read:
Count: 10000000 Average: 10.9753  StdDev: 78.69
Min: 1  Median: 3.9492  Max: 12332
Percentiles: P50: 3.95 P75: 6.40 P99: 114.13 P99.1: 124.20 P99.2: 134.28 P99.3: 144.35 P99.4: 154.43 P99.5: 164.50 P99.6: 184.69 P99.7: 217.04 P99.8: 249.39 P99.9: 502.35 P99.91: 535.80 P99.92: 569.26 P99.93: 671.97 P99.94: 807.42 P99.95: 1135.60 P99.96: 1808.51 P99.97: 2312.95 P99.98: 2782.21 P99.99: 4398.00
------------------------------------------------------
[       0,       1 ]      709   0.007%   0.007% 
(       1,       2 ]    16264   0.163%   0.170% 
(       2,       3 ]   137199   1.372%   1.542% 
(       3,       4 ]  5105360  51.054%  52.595% ##########
(       4,       6 ]  2007584  20.076%  72.671% ####
(       6,      10 ]  2326010  23.260%  95.931% #####
(      10,      15 ]     4092   0.041%  95.972% 
(      15,      22 ]     2449   0.024%  95.997% 
(      22,      34 ]     2345   0.023%  96.020% 
(      34,      51 ]     1346   0.013%  96.034% 
(      51,      76 ]      290   0.003%  96.036% 
(      76,     110 ]   292255   2.923%  98.959% #
(     110,     170 ]    59557   0.596%  99.555% 
(     170,     250 ]    24729   0.247%  99.802% 
(     250,     380 ]     6154   0.062%  99.863% 
(     380,     580 ]     5978   0.060%  99.923% 
(     580,     870 ]     2141   0.021%  99.945% 
(     870,    1300 ]      871   0.009%  99.953% 
(    1300,    1900 ]      787   0.008%  99.961% 
(    1900,    2900 ]     2131   0.021%  99.983% 
(    2900,    4400 ]      750   0.008%  99.990% 
(    4400,    6600 ]      883   0.009%  99.999% 
(    6600,    9900 ]      112   0.001% 100.000% 
(    9900,   14000 ]        4   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0        0        0
  1        3      193
  2       34     1851
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626631753849818
