========== fillrandom 64MB] Test5 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626634233388592
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
Date:	Mon Jul 19 03:50:33 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
DB path: [../mnt]
1626634236919831 1-Level CompactionJob::Run() [ 7 0 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634240180743 2-Level CompactionJob::Run() [ 7 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634243716625 2-Level CompactionJob::Run() [ 7 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634246987569 2-Level CompactionJob::Run() [ 7 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634250749921 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634251736955 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634252651259 2-Level CompactionJob::Run() [ 12 5 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634257850515 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634258772650 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634259686144 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634260604093 2-Level CompactionJob::Run() [ 14 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634267201308 2-Level CompactionJob::Run() [ 2 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634268554935 2-Level CompactionJob::Run() [ 2 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634269647726 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634270850272 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634271931477 2-Level CompactionJob::Run() [ 16 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634279046289 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634279954677 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634280814004 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634281691423 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634282777413 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
fillrandom   :       4.974 micros/op 201043 ops/sec;  101.2 MB/s
Latency for percentile 0 : 2.000000
Latency for percentile 1 : 2.016626
Latency for percentile 2 : 2.048028
Latency for percentile 3 : 2.079430
Latency for percentile 4 : 2.110832
Latency for percentile 5 : 2.142233
Latency for percentile 6 : 2.173635
Latency for percentile 7 : 2.205037
Latency for percentile 8 : 2.236439
Latency for percentile 9 : 2.267841
Latency for percentile 10 : 2.299243
Latency for percentile 11 : 2.330644
Latency for percentile 12 : 2.362046
Latency for percentile 13 : 2.393448
Latency for percentile 14 : 2.424850
Latency for percentile 15 : 2.456252
Latency for percentile 16 : 2.487654
Latency for percentile 17 : 2.519055
Latency for percentile 18 : 2.550457
Latency for percentile 19 : 2.581859
Latency for percentile 20 : 2.613261
Latency for percentile 21 : 2.644663
Latency for percentile 22 : 2.676065
Latency for percentile 23 : 2.707466
Latency for percentile 24 : 2.738868
Latency for percentile 25 : 2.770270
Latency for percentile 26 : 2.801672
Latency for percentile 27 : 2.833074
Latency for percentile 28 : 2.864476
Latency for percentile 29 : 2.895877
Latency for percentile 30 : 2.927279
Latency for percentile 31 : 2.958681
Latency for percentile 32 : 2.990083
Latency for percentile 33 : 3.013811
Latency for percentile 34 : 3.033998
Latency for percentile 35 : 3.054184
Latency for percentile 36 : 3.074371
Latency for percentile 37 : 3.094557
Latency for percentile 38 : 3.114744
Latency for percentile 39 : 3.134930
Latency for percentile 40 : 3.155117
Latency for percentile 41 : 3.175303
Latency for percentile 42 : 3.195490
Latency for percentile 43 : 3.215677
Latency for percentile 44 : 3.235863
Latency for percentile 45 : 3.256050
Latency for percentile 46 : 3.276236
Latency for percentile 47 : 3.296423
Latency for percentile 48 : 3.316609
Latency for percentile 49 : 3.336796
Latency for percentile 50 : 3.356982
Latency for percentile 51 : 3.377169
Latency for percentile 52 : 3.397355
Latency for percentile 53 : 3.417542
Latency for percentile 54 : 3.437728
Latency for percentile 55 : 3.457915
Latency for percentile 56 : 3.478101
Latency for percentile 57 : 3.498288
Latency for percentile 58 : 3.518474
Latency for percentile 59 : 3.538661
Latency for percentile 60 : 3.558847
Latency for percentile 61 : 3.579034
Latency for percentile 62 : 3.599220
Latency for percentile 63 : 3.619407
Latency for percentile 64 : 3.639593
Latency for percentile 65 : 3.659780
Latency for percentile 66 : 3.679966
Latency for percentile 67 : 3.700153
Latency for percentile 68 : 3.720339
Latency for percentile 69 : 3.740526
Latency for percentile 70 : 3.760712
Latency for percentile 71 : 3.780899
Latency for percentile 72 : 3.801085
Latency for percentile 73 : 3.821272
Latency for percentile 74 : 3.841458
Latency for percentile 75 : 3.861645
Latency for percentile 76 : 3.881831
Latency for percentile 77 : 3.902018
Latency for percentile 78 : 3.922204
Latency for percentile 79 : 3.942391
Latency for percentile 80 : 3.962577
Latency for percentile 81 : 3.982764
Latency for percentile 82 : 4.017257
Latency for percentile 83 : 4.135328
Latency for percentile 84 : 4.253399
Latency for percentile 85 : 4.371470
Latency for percentile 86 : 4.489541
Latency for percentile 87 : 4.607612
Latency for percentile 88 : 4.725683
Latency for percentile 89 : 4.843754
Latency for percentile 90 : 4.961825
Latency for percentile 91 : 5.079896
Latency for percentile 92 : 5.197967
Latency for percentile 93 : 5.316038
Latency for percentile 94 : 5.434108
Latency for percentile 95 : 5.552179
Latency for percentile 96 : 5.670250
Latency for percentile 97 : 5.788321
Latency for percentile 98 : 5.906392
Latency for percentile 99 : 7.208404
Latency for percentile 100 : 22530.000000
Microseconds per write:
Count: 10000000 Average: 4.9741  StdDev: 34.72
Min: 2  Median: 3.3570  Max: 22530
Percentiles: P50: 3.36 P75: 3.86 P99: 7.21 P99.1: 7.79 P99.2: 8.37 P99.3: 8.96 P99.4: 9.54 P99.5: 15.06 P99.6: 17.03 P99.7: 18.99 P99.8: 20.96 P99.9: 32.41 P99.91: 84.16 P99.92: 913.93 P99.93: 962.26 P99.94: 1010.59 P99.95: 1058.93 P99.96: 1107.26 P99.97: 1155.59 P99.98: 1203.92 P99.99: 1252.25
------------------------------------------------------
(       1,       2 ]    47054   0.471%   0.471% 
(       2,       3 ]  3184527  31.845%  32.316% ######
(       3,       4 ]  4953803  49.538%  81.854% ##########
(       4,       6 ]  1693897  16.939%  98.793% ###
(       6,      10 ]    68583   0.686%  99.479% 
(      10,      15 ]     1811   0.018%  99.497% 
(      15,      22 ]    35641   0.356%  99.853% 
(      22,      34 ]     5398   0.054%  99.907% 
(      34,      51 ]      187   0.002%  99.909% 
(      51,      76 ]       81   0.001%  99.910% 
(      76,     110 ]       75   0.001%  99.911% 
(     110,     170 ]       11   0.000%  99.911% 
(     170,     250 ]        3   0.000%  99.911% 
(     250,     380 ]        6   0.000%  99.911% 
(     380,     580 ]        4   0.000%  99.911% 
(     580,     870 ]       10   0.000%  99.911% 
(     870,    1300 ]     8897   0.089% 100.000% 
(    1300,    1900 ]        2   0.000% 100.000% 
(    1900,    2900 ]        6   0.000% 100.000% 
(    2900,    4400 ]        1   0.000% 100.000% 
(    9900,   14000 ]        2   0.000% 100.000% 
(   22000,   33000 ]        1   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0       13      480
  1       12      709
  2       23     1268
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626634283197828
========== readrandom 64MB] Test5 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626634283217848
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
1626634283626225 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
Date:	Mon Jul 19 03:51:23 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
DB path: [../mnt]
1626634284613375 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634285688512 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634286843241 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634288028097 2-Level CompactionJob::Run() [ 14 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626634294192587 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634295393594 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634296534992 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634297508740 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634298424643 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634299599751 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634300033918 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634301353833 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634302719665 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634304139516 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626634305610346 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
readrandom   :      10.597 micros/op 94362 ops/sec;   47.5 MB/s (10000000 of 10000000 found)
 PERF_CONTEXT:
user_key_comparison_count = 291489799, block_cache_hit_count = 40372, block_read_count = 11995057, block_read_byte = 26998603646, block_read_time = 67483715210, block_cache_index_hit_count = 0, index_block_read_count = 0, block_cache_filter_hit_count = 0, filter_block_read_count = 0, compression_dict_block_read_count = 0, block_checksum_time = 1268791933, block_decompress_time = 7931006662, get_read_bytes = 5120000000, multiget_read_bytes = 0, iter_read_bytes = 0, internal_key_skipped_count = 0, internal_delete_skipped_count = 0, internal_recent_skipped_count = 0, internal_merge_count = 0, write_wal_time = 0, get_snapshot_time = 1696240404, get_from_memtable_time = 0, get_from_memtable_count = 0, get_post_process_time = 516073985, get_from_output_files_time = 100418758846, seek_on_memtable_time = 0, seek_on_memtable_count = 0, next_on_memtable_count = 0, prev_on_memtable_count = 0, seek_child_seek_time = 0, seek_child_seek_count = 0, seek_min_heap_time = 0, seek_internal_seek_time = 0, find_next_user_entry_time = 0, write_pre_and_post_process_time = 0, write_memtable_time = 0, write_thread_wait_nanos = 0, write_scheduling_flushes_compactions_time = 0, db_mutex_lock_nanos = 0, db_condition_wait_nanos = 0, merge_operator_time_nanos = 0, write_delay_time = 0, read_index_block_nanos = 0, read_filter_block_nanos = 0, new_table_block_iter_nanos = 83665716683, new_table_iterator_nanos = 0, block_seek_nanos = 8943450837, find_table_nanos = 0, bloom_memtable_hit_count = 0, bloom_memtable_miss_count = 0, bloom_sst_hit_count = 0, bloom_sst_miss_count = 0, key_lock_wait_time = 0, key_lock_wait_count = 0, env_new_sequential_file_nanos = 0, env_new_random_access_file_nanos = 0, env_new_writable_file_nanos = 0, env_reuse_writable_file_nanos = 0, env_new_random_rw_file_nanos = 0, env_new_directory_nanos = 0, env_file_exists_nanos = 0, env_get_children_nanos = 0, env_get_children_file_attributes_nanos = 0, env_delete_file_nanos = 0, env_create_dir_nanos = 0, env_create_dir_if_missing_nanos = 0, env_delete_dir_nanos = 0, env_get_file_size_nanos = 0, env_get_file_modification_time_nanos = 0, env_rename_file_nanos = 0, env_link_file_nanos = 0, env_lock_file_nanos = 0, env_unlock_file_nanos = 0, env_new_logger_nanos = 0, get_cpu_nanos = 0, iter_next_cpu_nanos = 0, iter_prev_cpu_nanos = 0, iter_seek_cpu_nanos = 0, bloom_filter_useful = 0@level0, 0@level1, 0@level2, bloom_filter_full_positive = 0@level0, 0@level1, 0@level2, bloom_filter_full_true_positive = 0@level0, 0@level1, 0@level2, block_cache_hit_count = 1022@level0, 23037@level1, 16313@level2, block_cache_miss_count = 109810@level0, 3057881@level1, 8827366@level2
Latency for percentile 0 : 1.000000
Latency for percentile 1 : 2.175320
Latency for percentile 2 : 2.388009
Latency for percentile 3 : 2.600698
Latency for percentile 4 : 2.813387
Latency for percentile 5 : 3.002015
Latency for percentile 6 : 3.018455
Latency for percentile 7 : 3.034894
Latency for percentile 8 : 3.051333
Latency for percentile 9 : 3.067772
Latency for percentile 10 : 3.084212
Latency for percentile 11 : 3.100651
Latency for percentile 12 : 3.117090
Latency for percentile 13 : 3.133530
Latency for percentile 14 : 3.149969
Latency for percentile 15 : 3.166408
Latency for percentile 16 : 3.182847
Latency for percentile 17 : 3.199287
Latency for percentile 18 : 3.215726
Latency for percentile 19 : 3.232165
Latency for percentile 20 : 3.248604
Latency for percentile 21 : 3.265044
Latency for percentile 22 : 3.281483
Latency for percentile 23 : 3.297922
Latency for percentile 24 : 3.314361
Latency for percentile 25 : 3.330801
Latency for percentile 26 : 3.347240
Latency for percentile 27 : 3.363679
Latency for percentile 28 : 3.380118
Latency for percentile 29 : 3.396558
Latency for percentile 30 : 3.412997
Latency for percentile 31 : 3.429436
Latency for percentile 32 : 3.445875
Latency for percentile 33 : 3.462315
Latency for percentile 34 : 3.478754
Latency for percentile 35 : 3.495193
Latency for percentile 36 : 3.511633
Latency for percentile 37 : 3.528072
Latency for percentile 38 : 3.544511
Latency for percentile 39 : 3.560950
Latency for percentile 40 : 3.577390
Latency for percentile 41 : 3.593829
Latency for percentile 42 : 3.610268
Latency for percentile 43 : 3.626707
Latency for percentile 44 : 3.643147
Latency for percentile 45 : 3.659586
Latency for percentile 46 : 3.676025
Latency for percentile 47 : 3.692464
Latency for percentile 48 : 3.708904
Latency for percentile 49 : 3.725343
Latency for percentile 50 : 3.741782
Latency for percentile 51 : 3.758221
Latency for percentile 52 : 3.774661
Latency for percentile 53 : 3.791100
Latency for percentile 54 : 3.807539
Latency for percentile 55 : 3.823978
Latency for percentile 56 : 3.840418
Latency for percentile 57 : 3.856857
Latency for percentile 58 : 3.873296
Latency for percentile 59 : 3.889735
Latency for percentile 60 : 3.906175
Latency for percentile 61 : 3.922614
Latency for percentile 62 : 3.939053
Latency for percentile 63 : 3.955493
Latency for percentile 64 : 3.971932
Latency for percentile 65 : 3.988371
Latency for percentile 66 : 4.046220
Latency for percentile 67 : 4.204179
Latency for percentile 68 : 4.362138
Latency for percentile 69 : 4.520096
Latency for percentile 70 : 4.678055
Latency for percentile 71 : 4.836014
Latency for percentile 72 : 4.993972
Latency for percentile 73 : 5.151931
Latency for percentile 74 : 5.309890
Latency for percentile 75 : 5.467848
Latency for percentile 76 : 5.625807
Latency for percentile 77 : 5.783766
Latency for percentile 78 : 5.941724
Latency for percentile 79 : 6.145909
Latency for percentile 80 : 6.377118
Latency for percentile 81 : 6.608327
Latency for percentile 82 : 6.839535
Latency for percentile 83 : 7.070744
Latency for percentile 84 : 7.301953
Latency for percentile 85 : 7.533162
Latency for percentile 86 : 7.764370
Latency for percentile 87 : 7.995579
Latency for percentile 88 : 8.226788
Latency for percentile 89 : 8.457997
Latency for percentile 90 : 8.689206
Latency for percentile 91 : 8.920414
Latency for percentile 92 : 9.151623
Latency for percentile 93 : 9.382832
Latency for percentile 94 : 9.614041
Latency for percentile 95 : 9.845250
Latency for percentile 96 : 31.592357
Latency for percentile 97 : 87.027220
Latency for percentile 98 : 98.745216
Latency for percentile 99 : 113.872516
Latency for percentile 100 : 15064.000000
Microseconds per read:
Count: 10000000 Average: 10.5974  StdDev: 80.62
Min: 1  Median: 3.7418  Max: 15064
Percentiles: P50: 3.74 P75: 5.47 P99: 113.87 P99.1: 123.67 P99.2: 133.47 P99.3: 143.26 P99.4: 153.06 P99.5: 162.85 P99.6: 179.62 P99.7: 215.17 P99.8: 254.02 P99.9: 491.15 P99.91: 521.38 P99.92: 551.61 P99.93: 587.80 P99.94: 715.73 P99.95: 843.65 P99.96: 1527.75 P99.97: 2237.31 P99.98: 2679.40 P99.99: 4417.79
------------------------------------------------------
[       0,       1 ]      818   0.008%   0.008% 
(       1,       2 ]    16752   0.168%   0.176% 
(       2,       3 ]   470170   4.702%   4.877% #
(       3,       4 ]  6082999  60.830%  65.707% ############
(       4,       6 ]  1266154  12.662%  78.369% ###
(       6,      10 ]  1730038  17.300%  95.669% ###
(      10,      15 ]     3455   0.035%  95.704% 
(      15,      22 ]    22837   0.228%  95.932% 
(      22,      34 ]     8478   0.085%  96.017% 
(      34,      51 ]      706   0.007%  96.024% 
(      51,      76 ]     3488   0.035%  96.059% 
(      76,     110 ]   290152   2.902%  98.960% #
(     110,     170 ]    61247   0.612%  99.573% 
(     170,     250 ]    22504   0.225%  99.798% 
(     250,     380 ]     6525   0.065%  99.863% 
(     380,     580 ]     6616   0.066%  99.929% 
(     580,     870 ]     2267   0.023%  99.952% 
(     870,    1300 ]      649   0.006%  99.959% 
(    1300,    1900 ]      382   0.004%  99.962% 
(    1900,    2900 ]     2262   0.023%  99.985% 
(    2900,    4400 ]      495   0.005%  99.990% 
(    4400,    6600 ]      742   0.007%  99.997% 
(    6600,    9900 ]      255   0.003% 100.000% 
(    9900,   14000 ]        8   0.000% 100.000% 
(   14000,   22000 ]        1   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0        0        0
  1        3      193
  2       32     1844
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626634389620428
