========== fillrandom 16MB] Test5 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626634909124491
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
Date:	Mon Jul 19 04:01:49 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
DB path: [../mnt]
1626635027457024 1-Level CompactionJob::Run() [ 28 0 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626637852329302 2-Level CompactionJob::Run() [ 28 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626645019676297 2-Level CompactionJob::Run() [ 28 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626652194547602 2-Level CompactionJob::Run() [ 28 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626652197857358 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626652198794136 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626652199710517 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626652200596976 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626658928177881 2-Level CompactionJob::Run() [ 28 3 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626658931125631 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626658932379334 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626658933530329 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626665663002222 2-Level CompactionJob::Run() [ 28 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626665666272295 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626665667639148 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626665668943445 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626665670271097 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626665670469978 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626671799969638 2-Level CompactionJob::Run() [ 28 3 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626671802935200 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626671803813947 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626671805500265 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626671806956403 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626678254191376 2-Level CompactionJob::Run() [ 28 3 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626678257148627 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626678258514627 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626678259948359 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626684983659770 2-Level CompactionJob::Run() [ 28 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626684986877859 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626684988690904 2-Level CompactionJob::Run() [ 2 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626684990459318 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626684992254782 2-Level CompactionJob::Run() [ 1 5 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626691383625584 2-Level CompactionJob::Run() [ 28 3 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626691386545118 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626691388691577 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626691390519657 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626698116959871 2-Level CompactionJob::Run() [ 28 4 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626698120250474 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626698122020395 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626698122537203 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626698124043668 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626698125974454 2-Level CompactionJob::Run() [ 1 5 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626704258101930 2-Level CompactionJob::Run() [ 28 3 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626704261087845 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
fillrandom   :    6935.228 micros/op 144 ops/sec;    0.1 MB/s
Latency for percentile 0 : 2.000000
Latency for percentile 1 : 2.012180
Latency for percentile 2 : 2.039899
Latency for percentile 3 : 2.067619
Latency for percentile 4 : 2.095338
Latency for percentile 5 : 2.123057
Latency for percentile 6 : 2.150776
Latency for percentile 7 : 2.178495
Latency for percentile 8 : 2.206215
Latency for percentile 9 : 2.233934
Latency for percentile 10 : 2.261653
Latency for percentile 11 : 2.289372
Latency for percentile 12 : 2.317091
Latency for percentile 13 : 2.344811
Latency for percentile 14 : 2.372530
Latency for percentile 15 : 2.400249
Latency for percentile 16 : 2.427968
Latency for percentile 17 : 2.455687
Latency for percentile 18 : 2.483407
Latency for percentile 19 : 2.511126
Latency for percentile 20 : 2.538845
Latency for percentile 21 : 2.566564
Latency for percentile 22 : 2.594283
Latency for percentile 23 : 2.622003
Latency for percentile 24 : 2.649722
Latency for percentile 25 : 2.677441
Latency for percentile 26 : 2.705160
Latency for percentile 27 : 2.732879
Latency for percentile 28 : 2.760599
Latency for percentile 29 : 2.788318
Latency for percentile 30 : 2.816037
Latency for percentile 31 : 2.843756
Latency for percentile 32 : 2.871475
Latency for percentile 33 : 2.899195
Latency for percentile 34 : 2.926914
Latency for percentile 35 : 2.954633
Latency for percentile 36 : 2.982352
Latency for percentile 37 : 3.012892
Latency for percentile 38 : 3.048373
Latency for percentile 39 : 3.083854
Latency for percentile 40 : 3.119335
Latency for percentile 41 : 3.154816
Latency for percentile 42 : 3.190297
Latency for percentile 43 : 3.225779
Latency for percentile 44 : 3.261260
Latency for percentile 45 : 3.296741
Latency for percentile 46 : 3.332222
Latency for percentile 47 : 3.367703
Latency for percentile 48 : 3.403184
Latency for percentile 49 : 3.438666
Latency for percentile 50 : 3.474147
Latency for percentile 51 : 3.509628
Latency for percentile 52 : 3.545109
Latency for percentile 53 : 3.580590
Latency for percentile 54 : 3.616071
Latency for percentile 55 : 3.651552
Latency for percentile 56 : 3.687034
Latency for percentile 57 : 3.722515
Latency for percentile 58 : 3.757996
Latency for percentile 59 : 3.793477
Latency for percentile 60 : 3.828958
Latency for percentile 61 : 3.864439
Latency for percentile 62 : 3.899920
Latency for percentile 63 : 3.935402
Latency for percentile 64 : 3.970883
Latency for percentile 65 : 4.042113
Latency for percentile 66 : 4.276907
Latency for percentile 67 : 4.511701
Latency for percentile 68 : 4.746495
Latency for percentile 69 : 4.981289
Latency for percentile 70 : 5.216083
Latency for percentile 71 : 5.450878
Latency for percentile 72 : 5.685672
Latency for percentile 73 : 5.920466
Latency for percentile 74 : 18.279125
Latency for percentile 75 : 36.778652
Latency for percentile 76 : 2312.973646
Latency for percentile 77 : 7623.644951
Latency for percentile 78 : 14977.285204
Latency for percentile 79 : 19120.430887
Latency for percentile 80 : 22638.050462
Latency for percentile 81 : 24730.156375
Latency for percentile 82 : 26822.262289
Latency for percentile 83 : 28914.368203
Latency for percentile 84 : 31006.474117
Latency for percentile 85 : 33053.235436
Latency for percentile 86 : 34183.019741
Latency for percentile 87 : 35312.804045
Latency for percentile 88 : 36442.588349
Latency for percentile 89 : 37572.372653
Latency for percentile 90 : 38199.000000
Latency for percentile 91 : 38199.000000
Latency for percentile 92 : 38199.000000
Latency for percentile 93 : 38199.000000
Latency for percentile 94 : 38199.000000
Latency for percentile 95 : 38199.000000
Latency for percentile 96 : 38199.000000
Latency for percentile 97 : 38199.000000
Latency for percentile 98 : 38199.000000
Latency for percentile 99 : 38199.000000
Latency for percentile 100 : 38199.000000
Microseconds per write:
Count: 10000000 Average: 6935.2284  StdDev: 402.76
Min: 2  Median: 3.4741  Max: 38199
Percentiles: P50: 3.47 P75: 36.78 P99: 38199.00 P99.1: 38199.00 P99.2: 38199.00 P99.3: 38199.00 P99.4: 38199.00 P99.5: 38199.00 P99.6: 38199.00 P99.7: 38199.00 P99.8: 38199.00 P99.9: 38199.00 P99.91: 38199.00 P99.92: 38199.00 P99.93: 38199.00 P99.94: 38199.00 P99.95: 38199.00 P99.96: 38199.00 P99.97: 38199.00 P99.98: 38199.00 P99.99: 38199.00
------------------------------------------------------
(       1,       2 ]    56059   0.561%   0.561% 
(       2,       3 ]  3607607  36.076%  36.637% #######
(       3,       4 ]  2818398  28.184%  64.821% ######
(       4,       6 ]   851810   8.518%  73.339% ##
(       6,      10 ]    36384   0.364%  73.703% 
(      10,      15 ]     1913   0.019%  73.722% 
(      15,      22 ]    59407   0.594%  74.316% 
(      22,      34 ]    59741   0.597%  74.913% 
(      34,      51 ]    53111   0.531%  75.444% 
(      51,      76 ]     7104   0.071%  75.515% 
(      76,     110 ]      169   0.002%  75.517% 
(     110,     170 ]       21   0.000%  75.517% 
(     170,     250 ]        6   0.000%  75.517% 
(     250,     380 ]       23   0.000%  75.518% 
(     380,     580 ]        3   0.000%  75.518% 
(     580,     870 ]        3   0.000%  75.518% 
(     870,    1300 ]    23680   0.237%  75.754% 
(    1300,    1900 ]        6   0.000%  75.754% 
(    1900,    2900 ]    59459   0.595%  76.349% 
(    2900,    4400 ]    27338   0.273%  76.622% 
(    4400,    6600 ]    28235   0.282%  76.905% 
(    6600,    9900 ]    30700   0.307%  77.212% 
(    9900,   14000 ]    55235   0.552%  77.764% 
(   14000,   22000 ]   193090   1.931%  79.695% 
(   22000,   33000 ]   525786   5.258%  84.953% #
(   33000,   50000 ]  1504712  15.047% 100.000% ###


Level Files Size(MB)
--------------------
  0        3       28
  1        8      424
  2       32     1732
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626704261476494
========== readrandom 16MB] Test5 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626704261494971
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
1626704261592980 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
Date:	Mon Jul 19 23:17:41 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
DB path: [../mnt]
1626704263353403 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626704265346080 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
readrandom   :      20.985 micros/op 47654 ops/sec;   24.0 MB/s (10000000 of 10000000 found)
 PERF_CONTEXT:
user_key_comparison_count = 1024114598, block_cache_hit_count = 4539305, block_read_count = 51016182, block_read_byte = 115861014459, block_read_time = 78679166579, block_cache_index_hit_count = 0, index_block_read_count = 0, block_cache_filter_hit_count = 0, filter_block_read_count = 0, compression_dict_block_read_count = 0, block_checksum_time = 5261223496, block_decompress_time = 33198874516, get_read_bytes = 5120000000, multiget_read_bytes = 0, iter_read_bytes = 0, internal_key_skipped_count = 0, internal_delete_skipped_count = 0, internal_recent_skipped_count = 0, internal_merge_count = 0, write_wal_time = 0, get_snapshot_time = 1912473381, get_from_memtable_time = 0, get_from_memtable_count = 0, get_post_process_time = 642989582, get_from_output_files_time = 203773843722, seek_on_memtable_time = 0, seek_on_memtable_count = 0, next_on_memtable_count = 0, prev_on_memtable_count = 0, seek_child_seek_time = 0, seek_child_seek_count = 0, seek_min_heap_time = 0, seek_internal_seek_time = 0, find_next_user_entry_time = 0, write_pre_and_post_process_time = 0, write_memtable_time = 0, write_thread_wait_nanos = 0, write_scheduling_flushes_compactions_time = 0, db_mutex_lock_nanos = 0, db_condition_wait_nanos = 0, merge_operator_time_nanos = 0, write_delay_time = 0, read_index_block_nanos = 0, read_filter_block_nanos = 0, new_table_block_iter_nanos = 144836326744, new_table_iterator_nanos = 0, block_seek_nanos = 32090075857, find_table_nanos = 0, bloom_memtable_hit_count = 0, bloom_memtable_miss_count = 0, bloom_sst_hit_count = 0, bloom_sst_miss_count = 0, key_lock_wait_time = 0, key_lock_wait_count = 0, env_new_sequential_file_nanos = 0, env_new_random_access_file_nanos = 0, env_new_writable_file_nanos = 0, env_reuse_writable_file_nanos = 0, env_new_random_rw_file_nanos = 0, env_new_directory_nanos = 0, env_file_exists_nanos = 0, env_get_children_nanos = 0, env_get_children_file_attributes_nanos = 0, env_delete_file_nanos = 0, env_create_dir_nanos = 0, env_create_dir_if_missing_nanos = 0, env_delete_dir_nanos = 0, env_get_file_size_nanos = 0, env_get_file_modification_time_nanos = 0, env_rename_file_nanos = 0, env_link_file_nanos = 0, env_lock_file_nanos = 0, env_unlock_file_nanos = 0, env_new_logger_nanos = 0, get_cpu_nanos = 0, iter_next_cpu_nanos = 0, iter_prev_cpu_nanos = 0, iter_seek_cpu_nanos = 0, bloom_filter_useful = 0@level0, 0@level1, 0@level2, bloom_filter_full_positive = 0@level0, 0@level1, 0@level2, bloom_filter_full_true_positive = 0@level0, 0@level1, 0@level2, block_cache_hit_count = 4514807@level0, 21102@level1, 3396@level2, block_cache_miss_count = 36431067@level0, 6186397@level1, 8398718@level2
Latency for percentile 0 : 1.000000
Latency for percentile 1 : 5.852316
Latency for percentile 2 : 7.170429
Latency for percentile 3 : 8.378290
Latency for percentile 4 : 9.586151
Latency for percentile 5 : 10.143251
Latency for percentile 6 : 10.361167
Latency for percentile 7 : 10.579082
Latency for percentile 8 : 10.796998
Latency for percentile 9 : 11.014914
Latency for percentile 10 : 11.232829
Latency for percentile 11 : 11.450745
Latency for percentile 12 : 11.668661
Latency for percentile 13 : 11.886576
Latency for percentile 14 : 12.104492
Latency for percentile 15 : 12.322407
Latency for percentile 16 : 12.540323
Latency for percentile 17 : 12.758239
Latency for percentile 18 : 12.976154
Latency for percentile 19 : 13.194070
Latency for percentile 20 : 13.411986
Latency for percentile 21 : 13.629901
Latency for percentile 22 : 13.847817
Latency for percentile 23 : 14.065733
Latency for percentile 24 : 14.283648
Latency for percentile 25 : 14.501564
Latency for percentile 26 : 14.719479
Latency for percentile 27 : 14.937395
Latency for percentile 28 : 15.073216
Latency for percentile 29 : 15.175946
Latency for percentile 30 : 15.278675
Latency for percentile 31 : 15.381404
Latency for percentile 32 : 15.484133
Latency for percentile 33 : 15.586863
Latency for percentile 34 : 15.689592
Latency for percentile 35 : 15.792321
Latency for percentile 36 : 15.895051
Latency for percentile 37 : 15.997780
Latency for percentile 38 : 16.100509
Latency for percentile 39 : 16.203239
Latency for percentile 40 : 16.305968
Latency for percentile 41 : 16.408697
Latency for percentile 42 : 16.511427
Latency for percentile 43 : 16.614156
Latency for percentile 44 : 16.716885
Latency for percentile 45 : 16.819615
Latency for percentile 46 : 16.922344
Latency for percentile 47 : 17.025073
Latency for percentile 48 : 17.127802
Latency for percentile 49 : 17.230532
Latency for percentile 50 : 17.333261
Latency for percentile 51 : 17.435990
Latency for percentile 52 : 17.538720
Latency for percentile 53 : 17.641449
Latency for percentile 54 : 17.744178
Latency for percentile 55 : 17.846908
Latency for percentile 56 : 17.949637
Latency for percentile 57 : 18.052366
Latency for percentile 58 : 18.155096
Latency for percentile 59 : 18.257825
Latency for percentile 60 : 18.360554
Latency for percentile 61 : 18.463284
Latency for percentile 62 : 18.566013
Latency for percentile 63 : 18.668742
Latency for percentile 64 : 18.771471
Latency for percentile 65 : 18.874201
Latency for percentile 66 : 18.976930
Latency for percentile 67 : 19.079659
Latency for percentile 68 : 19.182389
Latency for percentile 69 : 19.285118
Latency for percentile 70 : 19.387847
Latency for percentile 71 : 19.490577
Latency for percentile 72 : 19.593306
Latency for percentile 73 : 19.696035
Latency for percentile 74 : 19.798765
Latency for percentile 75 : 19.901494
Latency for percentile 76 : 20.004223
Latency for percentile 77 : 20.106953
Latency for percentile 78 : 20.209682
Latency for percentile 79 : 20.312411
Latency for percentile 80 : 20.415140
Latency for percentile 81 : 20.517870
Latency for percentile 82 : 20.620599
Latency for percentile 83 : 20.723328
Latency for percentile 84 : 20.826058
Latency for percentile 85 : 20.928787
Latency for percentile 86 : 21.031516
Latency for percentile 87 : 21.134246
Latency for percentile 88 : 21.236975
Latency for percentile 89 : 21.339704
Latency for percentile 90 : 21.442434
Latency for percentile 91 : 21.545163
Latency for percentile 92 : 21.647892
Latency for percentile 93 : 21.750622
Latency for percentile 94 : 21.853351
Latency for percentile 95 : 21.956080
Latency for percentile 96 : 32.340860
Latency for percentile 97 : 88.492707
Latency for percentile 98 : 105.253117
Latency for percentile 99 : 142.006251
Latency for percentile 100 : 7524.000000
Microseconds per read:
Count: 10000000 Average: 20.9845  StdDev: 39.30
Min: 1  Median: 17.3333  Max: 7524
Percentiles: P50: 17.33 P75: 19.90 P99: 142.01 P99.1: 146.47 P99.2: 150.94 P99.3: 155.40 P99.4: 159.87 P99.5: 164.33 P99.6: 168.80 P99.7: 188.84 P99.8: 214.63 P99.9: 240.41 P99.91: 242.99 P99.92: 245.57 P99.93: 248.15 P99.94: 269.71 P99.95: 339.87 P99.96: 439.65 P99.97: 579.02 P99.98: 859.31 P99.99: 1755.53
------------------------------------------------------
[       0,       1 ]     8488   0.085%   0.085% 
(       1,       2 ]     9950   0.100%   0.184% 
(       2,       3 ]    20947   0.209%   0.394% 
(       3,       4 ]    21746   0.217%   0.611% 
(       4,       6 ]    41968   0.420%   1.031% 
(       6,      10 ]   331164   3.312%   4.343% #
(      10,      15 ]  2294466  22.945%  27.287% #####
(      15,      22 ]  6814024  68.140%  95.428% ##############
(      22,      34 ]    66432   0.664%  96.092% 
(      34,      51 ]    14047   0.140%  96.232% 
(      51,      76 ]     2231   0.022%  96.255% 
(      76,     110 ]   202859   2.029%  98.283% 
(     110,     170 ]   134370   1.344%  99.627% 
(     170,     250 ]    31027   0.310%  99.937% 
(     250,     380 ]     1853   0.019%  99.956% 
(     380,     580 ]     1435   0.014%  99.970% 
(     580,     870 ]     1031   0.010%  99.980% 
(     870,    1300 ]      653   0.007%  99.987% 
(    1300,    1900 ]      407   0.004%  99.991% 
(    1900,    2900 ]      421   0.004%  99.995% 
(    2900,    4400 ]      453   0.005% 100.000% 
(    4400,    6600 ]       26   0.000% 100.000% 
(    6600,    9900 ]        2   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0        4       35
  1        5      231
  2       34     1820
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626704471455962
