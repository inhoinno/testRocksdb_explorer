========== fill readrandom 32MB] Test4 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626631753967954
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
Date:	Mon Jul 19 03:09:13 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
DB path: [../mnt]
1626631757297297 1-Level CompactionJob::Run() [ 14 0 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631760683558 2-Level CompactionJob::Run() [ 14 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631765700430 2-Level CompactionJob::Run() [ 14 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631770636338 2-Level CompactionJob::Run() [ 14 8 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631774131408 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631774598201 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631775067747 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631775748710 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631776371016 2-Level CompactionJob::Run() [ 16 7 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631779837831 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631780280710 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631780752837 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631781225720 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631781694182 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631782372435 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631783044252 2-Level CompactionJob::Run() [ 19 10 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631787301823 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631787670273 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631788115747 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631788767662 2-Level CompactionJob::Run() [ 2 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631789439303 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631790094895 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631790708470 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631791388153 2-Level CompactionJob::Run() [ 20 12 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631796043707 2-Level CompactionJob::Run() [ 1 1 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631796491200 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631797051370 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631797646774 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631798277609 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631798826900 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631799505093 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631800183901 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631800789541 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631801351981 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631801954096 2-Level CompactionJob::Run() [ 20 12 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631806534686 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631807154900 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631807817745 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631808484466 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631809152544 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631809817045 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631810526829 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631811198171 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631811826136 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631812403255 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631812884177 2-Level CompactionJob::Run() [ 21 11 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631817732376 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631818365327 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631819025988 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631819748385 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631820708692 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
fillrandom   :       6.715 micros/op 148915 ops/sec;   75.0 MB/s
Latency for percentile 0 : 2.000000
Latency for percentile 1 : 2.000000
Latency for percentile 2 : 2.020838
Latency for percentile 3 : 2.043150
Latency for percentile 4 : 2.065461
Latency for percentile 5 : 2.087773
Latency for percentile 6 : 2.110085
Latency for percentile 7 : 2.132397
Latency for percentile 8 : 2.154709
Latency for percentile 9 : 2.177021
Latency for percentile 10 : 2.199333
Latency for percentile 11 : 2.221644
Latency for percentile 12 : 2.243956
Latency for percentile 13 : 2.266268
Latency for percentile 14 : 2.288580
Latency for percentile 15 : 2.310892
Latency for percentile 16 : 2.333204
Latency for percentile 17 : 2.355516
Latency for percentile 18 : 2.377827
Latency for percentile 19 : 2.400139
Latency for percentile 20 : 2.422451
Latency for percentile 21 : 2.444763
Latency for percentile 22 : 2.467075
Latency for percentile 23 : 2.489387
Latency for percentile 24 : 2.511699
Latency for percentile 25 : 2.534010
Latency for percentile 26 : 2.556322
Latency for percentile 27 : 2.578634
Latency for percentile 28 : 2.600946
Latency for percentile 29 : 2.623258
Latency for percentile 30 : 2.645570
Latency for percentile 31 : 2.667882
Latency for percentile 32 : 2.690193
Latency for percentile 33 : 2.712505
Latency for percentile 34 : 2.734817
Latency for percentile 35 : 2.757129
Latency for percentile 36 : 2.779441
Latency for percentile 37 : 2.801753
Latency for percentile 38 : 2.824065
Latency for percentile 39 : 2.846376
Latency for percentile 40 : 2.868688
Latency for percentile 41 : 2.891000
Latency for percentile 42 : 2.913312
Latency for percentile 43 : 2.935624
Latency for percentile 44 : 2.957936
Latency for percentile 45 : 2.980248
Latency for percentile 46 : 3.002884
Latency for percentile 47 : 3.028030
Latency for percentile 48 : 3.053175
Latency for percentile 49 : 3.078320
Latency for percentile 50 : 3.103465
Latency for percentile 51 : 3.128610
Latency for percentile 52 : 3.153756
Latency for percentile 53 : 3.178901
Latency for percentile 54 : 3.204046
Latency for percentile 55 : 3.229191
Latency for percentile 56 : 3.254336
Latency for percentile 57 : 3.279481
Latency for percentile 58 : 3.304627
Latency for percentile 59 : 3.329772
Latency for percentile 60 : 3.354917
Latency for percentile 61 : 3.380062
Latency for percentile 62 : 3.405207
Latency for percentile 63 : 3.430353
Latency for percentile 64 : 3.455498
Latency for percentile 65 : 3.480643
Latency for percentile 66 : 3.505788
Latency for percentile 67 : 3.530933
Latency for percentile 68 : 3.556079
Latency for percentile 69 : 3.581224
Latency for percentile 70 : 3.606369
Latency for percentile 71 : 3.631514
Latency for percentile 72 : 3.656659
Latency for percentile 73 : 3.681804
Latency for percentile 74 : 3.706950
Latency for percentile 75 : 3.732095
Latency for percentile 76 : 3.757240
Latency for percentile 77 : 3.782385
Latency for percentile 78 : 3.807530
Latency for percentile 79 : 3.832676
Latency for percentile 80 : 3.857821
Latency for percentile 81 : 3.882966
Latency for percentile 82 : 3.908111
Latency for percentile 83 : 3.933256
Latency for percentile 84 : 3.958402
Latency for percentile 85 : 3.983547
Latency for percentile 86 : 4.053690
Latency for percentile 87 : 4.209012
Latency for percentile 88 : 4.364333
Latency for percentile 89 : 4.519655
Latency for percentile 90 : 4.674976
Latency for percentile 91 : 4.830298
Latency for percentile 92 : 4.985620
Latency for percentile 93 : 5.140941
Latency for percentile 94 : 5.296263
Latency for percentile 95 : 5.451584
Latency for percentile 96 : 5.606906
Latency for percentile 97 : 5.762227
Latency for percentile 98 : 5.917549
Latency for percentile 99 : 8.141159
Latency for percentile 100 : 14438.000000
Microseconds per write:
Count: 10000000 Average: 6.7152  StdDev: 58.19
Min: 2  Median: 3.1035  Max: 14438
Percentiles: P50: 3.10 P75: 3.73 P99: 8.14 P99.1: 8.60 P99.2: 9.05 P99.3: 9.51 P99.4: 9.97 P99.5: 16.27 P99.6: 19.62 P99.7: 27.88 P99.8: 973.30 P99.9: 1139.98 P99.91: 1156.64 P99.92: 1173.31 P99.93: 1189.98 P99.94: 1206.65 P99.95: 1223.31 P99.96: 1239.98 P99.97: 1256.65 P99.98: 1273.32 P99.99: 1289.98
------------------------------------------------------
(       1,       2 ]   106607   1.066%   1.066% 
(       2,       3 ]  4481922  44.819%  45.885% #########
(       3,       4 ]  3976904  39.769%  85.654% ########
(       4,       6 ]  1287651  12.877%  98.531% ###
(       6,      10 ]    87646   0.876%  99.407% 
(      10,      15 ]     5483   0.055%  99.462% 
(      15,      22 ]    20902   0.209%  99.671% 
(      22,      34 ]     5886   0.059%  99.730% 
(      34,      51 ]      418   0.004%  99.734% 
(      51,      76 ]      160   0.002%  99.736% 
(      76,     110 ]      148   0.001%  99.737% 
(     110,     170 ]       30   0.000%  99.738% 
(     170,     250 ]        9   0.000%  99.738% 
(     250,     380 ]       22   0.000%  99.738% 
(     380,     580 ]       10   0.000%  99.738% 
(     580,     870 ]        4   0.000%  99.738% 
(     870,    1300 ]    25799   0.258%  99.996% 
(    1300,    1900 ]       13   0.000%  99.996% 
(    1900,    2900 ]      377   0.004% 100.000% 
(    2900,    4400 ]        5   0.000% 100.000% 
(    4400,    6600 ]        1   0.000% 100.000% 
(    6600,    9900 ]        1   0.000% 100.000% 
(    9900,   14000 ]        1   0.000% 100.000% 
(   14000,   22000 ]        1   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0       16      295
  1       18      549
  2       53     1531
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626631821185411
========== readrandom 64MB] Test4 MemTable size Compaction Latency ===========
benchmark.Run() start : 1626631821204698
Initializing RocksDB Options from the specified file
Initializing RocksDB Options from command-line flags
1626631821342109 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
Date:	Mon Jul 19 03:10:21 2021
Keys:       16 bytes each (+ 0 bytes user-defined timestamp)
Values:     512 bytes each (256 bytes after compression)
Entries:    10000000
Prefix:    0 bytes
Keys per prefix:    0
RawSize:    5035.4 MB (estimated)
FileSize:   2594.0 MB (estimated)
Write rate: 0 bytes/second
Read rate: 0 ops/second
Compression: Snappy
Compression sampling rate: 0
Memtablerep: skip_list
Perf Level: 3
WARNING: Assertions are enabled; benchmarks unnecessarily slow
------------------------------------------------
DB path: [../mnt]
1626631822049361 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631822761151 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631823492427 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631824231587 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631824979744 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631825722774 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631826479537 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631827267712 2-Level CompactionJob::Run() [ 17 10 0 0 0 0 0 ] to level-1 total output files 0 (write 0 MB))
1626631831185815 2-Level CompactionJob::Run() [ 1 2 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631831750796 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631832475451 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631833250200 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631834029116 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631834809571 2-Level CompactionJob::Run() [ 1 3 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631835600144 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631836456524 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631837358204 2-Level CompactionJob::Run() [ 1 5 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
1626631838111586 2-Level CompactionJob::Run() [ 1 4 0 0 0 0 0 ] to level-2 total output files 0 (write 0 MB))
readrandom   :      10.856 micros/op 92114 ops/sec;   46.4 MB/s (10000000 of 10000000 found)
 PERF_CONTEXT:
user_key_comparison_count = 330688224, block_cache_hit_count = 72203, block_read_count = 14167726, block_read_byte = 31948919496, block_read_time = 64900537126, block_cache_index_hit_count = 0, index_block_read_count = 0, block_cache_filter_hit_count = 0, filter_block_read_count = 0, compression_dict_block_read_count = 0, block_checksum_time = 1472510187, block_decompress_time = 9660073868, get_read_bytes = 5120000000, multiget_read_bytes = 0, iter_read_bytes = 0, internal_key_skipped_count = 0, internal_delete_skipped_count = 0, internal_recent_skipped_count = 0, internal_merge_count = 0, write_wal_time = 0, get_snapshot_time = 1765469066, get_from_memtable_time = 0, get_from_memtable_count = 0, get_post_process_time = 493925840, get_from_output_files_time = 103429150514, seek_on_memtable_time = 0, seek_on_memtable_count = 0, next_on_memtable_count = 0, prev_on_memtable_count = 0, seek_child_seek_time = 0, seek_child_seek_count = 0, seek_min_heap_time = 0, seek_internal_seek_time = 0, find_next_user_entry_time = 0, write_pre_and_post_process_time = 0, write_memtable_time = 0, write_thread_wait_nanos = 0, write_scheduling_flushes_compactions_time = 0, db_mutex_lock_nanos = 0, db_condition_wait_nanos = 0, merge_operator_time_nanos = 0, write_delay_time = 0, read_index_block_nanos = 0, read_filter_block_nanos = 0, new_table_block_iter_nanos = 84370549424, new_table_iterator_nanos = 0, block_seek_nanos = 10156967505, find_table_nanos = 0, bloom_memtable_hit_count = 0, bloom_memtable_miss_count = 0, bloom_sst_hit_count = 0, bloom_sst_miss_count = 0, key_lock_wait_time = 0, key_lock_wait_count = 0, env_new_sequential_file_nanos = 0, env_new_random_access_file_nanos = 0, env_new_writable_file_nanos = 0, env_reuse_writable_file_nanos = 0, env_new_random_rw_file_nanos = 0, env_new_directory_nanos = 0, env_file_exists_nanos = 0, env_get_children_nanos = 0, env_get_children_file_attributes_nanos = 0, env_delete_file_nanos = 0, env_create_dir_nanos = 0, env_create_dir_if_missing_nanos = 0, env_delete_dir_nanos = 0, env_get_file_size_nanos = 0, env_get_file_modification_time_nanos = 0, env_rename_file_nanos = 0, env_link_file_nanos = 0, env_lock_file_nanos = 0, env_unlock_file_nanos = 0, env_new_logger_nanos = 0, get_cpu_nanos = 0, iter_next_cpu_nanos = 0, iter_prev_cpu_nanos = 0, iter_seek_cpu_nanos = 0, bloom_filter_useful = 0@level0, 0@level1, 0@level2, bloom_filter_full_positive = 0@level0, 0@level1, 0@level2, bloom_filter_full_true_positive = 0@level0, 0@level1, 0@level2, block_cache_hit_count = 1349@level0, 57722@level1, 13132@level2, block_cache_miss_count = 91684@level0, 5581216@level1, 8494826@level2
Latency for percentile 0 : 1.000000
Latency for percentile 1 : 2.262998
Latency for percentile 2 : 2.582326
Latency for percentile 3 : 2.901653
Latency for percentile 4 : 3.016034
Latency for percentile 5 : 3.039203
Latency for percentile 6 : 3.062373
Latency for percentile 7 : 3.085543
Latency for percentile 8 : 3.108712
Latency for percentile 9 : 3.131882
Latency for percentile 10 : 3.155051
Latency for percentile 11 : 3.178221
Latency for percentile 12 : 3.201391
Latency for percentile 13 : 3.224560
Latency for percentile 14 : 3.247730
Latency for percentile 15 : 3.270899
Latency for percentile 16 : 3.294069
Latency for percentile 17 : 3.317239
Latency for percentile 18 : 3.340408
Latency for percentile 19 : 3.363578
Latency for percentile 20 : 3.386747
Latency for percentile 21 : 3.409917
Latency for percentile 22 : 3.433087
Latency for percentile 23 : 3.456256
Latency for percentile 24 : 3.479426
Latency for percentile 25 : 3.502595
Latency for percentile 26 : 3.525765
Latency for percentile 27 : 3.548935
Latency for percentile 28 : 3.572104
Latency for percentile 29 : 3.595274
Latency for percentile 30 : 3.618443
Latency for percentile 31 : 3.641613
Latency for percentile 32 : 3.664783
Latency for percentile 33 : 3.687952
Latency for percentile 34 : 3.711122
Latency for percentile 35 : 3.734291
Latency for percentile 36 : 3.757461
Latency for percentile 37 : 3.780630
Latency for percentile 38 : 3.803800
Latency for percentile 39 : 3.826970
Latency for percentile 40 : 3.850139
Latency for percentile 41 : 3.873309
Latency for percentile 42 : 3.896478
Latency for percentile 43 : 3.919648
Latency for percentile 44 : 3.942818
Latency for percentile 45 : 3.965987
Latency for percentile 46 : 3.989157
Latency for percentile 47 : 4.090507
Latency for percentile 48 : 4.260629
Latency for percentile 49 : 4.430751
Latency for percentile 50 : 4.600873
Latency for percentile 51 : 4.770995
Latency for percentile 52 : 4.941117
Latency for percentile 53 : 5.111239
Latency for percentile 54 : 5.281360
Latency for percentile 55 : 5.451482
Latency for percentile 56 : 5.621604
Latency for percentile 57 : 5.791726
Latency for percentile 58 : 5.961848
Latency for percentile 59 : 6.081959
Latency for percentile 60 : 6.187612
Latency for percentile 61 : 6.293265
Latency for percentile 62 : 6.398918
Latency for percentile 63 : 6.504571
Latency for percentile 64 : 6.610224
Latency for percentile 65 : 6.715877
Latency for percentile 66 : 6.821530
Latency for percentile 67 : 6.927183
Latency for percentile 68 : 7.032836
Latency for percentile 69 : 7.138489
Latency for percentile 70 : 7.244142
Latency for percentile 71 : 7.349795
Latency for percentile 72 : 7.455448
Latency for percentile 73 : 7.561101
Latency for percentile 74 : 7.666754
Latency for percentile 75 : 7.772407
Latency for percentile 76 : 7.878060
Latency for percentile 77 : 7.983713
Latency for percentile 78 : 8.089366
Latency for percentile 79 : 8.195018
Latency for percentile 80 : 8.300671
Latency for percentile 81 : 8.406324
Latency for percentile 82 : 8.511977
Latency for percentile 83 : 8.617630
Latency for percentile 84 : 8.723283
Latency for percentile 85 : 8.828936
Latency for percentile 86 : 8.934589
Latency for percentile 87 : 9.040242
Latency for percentile 88 : 9.145895
Latency for percentile 89 : 9.251548
Latency for percentile 90 : 9.357201
Latency for percentile 91 : 9.462854
Latency for percentile 92 : 9.568507
Latency for percentile 93 : 9.674160
Latency for percentile 94 : 9.779813
Latency for percentile 95 : 9.885466
Latency for percentile 96 : 9.991119
Latency for percentile 97 : 85.878634
Latency for percentile 98 : 97.923839
Latency for percentile 99 : 109.969044
Latency for percentile 100 : 14186.000000
Microseconds per read:
Count: 10000000 Average: 10.8560  StdDev: 83.43
Min: 1  Median: 4.6009  Max: 14186
Percentiles: P50: 4.60 P75: 7.77 P99: 109.97 P99.1: 120.61 P99.2: 131.49 P99.3: 142.38 P99.4: 153.26 P99.5: 164.15 P99.6: 181.69 P99.7: 206.98 P99.8: 232.28 P99.9: 368.92 P99.91: 412.56 P99.92: 457.72 P99.93: 502.87 P99.94: 548.03 P99.95: 628.69 P99.96: 795.46 P99.97: 1327.52 P99.98: 2420.03 P99.99: 4417.25
------------------------------------------------------
[       0,       1 ]     1690   0.017%   0.017% 
(       1,       2 ]    15950   0.160%   0.176% 
(       2,       3 ]   313158   3.132%   3.308% #
(       3,       4 ]  4316001  43.160%  46.468% #########
(       4,       6 ]  1175627  11.756%  58.224% ##
(       6,      10 ]  3785980  37.860%  96.084% ########
(      10,      15 ]     4341   0.043%  96.127% 
(      15,      22 ]     2031   0.020%  96.148% 
(      22,      34 ]     1967   0.020%  96.167% 
(      34,      51 ]      814   0.008%  96.176% 
(      51,      76 ]      428   0.004%  96.180% 
(      76,     110 ]   282270   2.823%  99.003% #
(     110,     170 ]    55121   0.551%  99.554% 
(     170,     250 ]    31628   0.316%  99.870% 
(     250,     380 ]     3273   0.033%  99.903% 
(     380,     580 ]     4429   0.044%  99.947% 
(     580,     870 ]     1739   0.017%  99.964% 
(     870,    1300 ]      538   0.005%  99.970% 
(    1300,    1900 ]      327   0.003%  99.973% 
(    1900,    2900 ]     1323   0.013%  99.986% 
(    2900,    4400 ]      361   0.004%  99.990% 
(    4400,    6600 ]      510   0.005%  99.995% 
(    6600,    9900 ]      425   0.004%  99.999% 
(    9900,   14000 ]       68   0.001% 100.000% 
(   14000,   22000 ]        1   0.000% 100.000% 


Level Files Size(MB)
--------------------
  0        0        0
  1        8      245
  2       65     1831
  3        0        0
  4        0        0
  5        0        0
  6        0        0

benchmark.Run() end : 1626631929923096
